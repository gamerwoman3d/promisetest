//Example 1
import fetch from 'node-fetch';

const promise = fetch('https://jsonplaceholder.typicode.com/todos/1'

promise
  .then(res => res.json())
  .then(user => console.log('♠', user.title))
 
console.log('♦ Synchronous');
  
  
//Example 2

import fetch from 'node-fetch';

const promise = fetch('https://jsonplaceholder.typicode.com/todos/1'

promise
  .then(res => res.json())
  .then(user => console.log('♠', user.title))
  .catch();
  
console.log('♦ Synchronous');

//Example 3

import fetch from 'node-fetch';

const promise = fetch('https://jsonplaceholder.typicode.com/todos/1'

promise
  .then(res => res.json())
  .then(user => console.log('♠', user.title))
  .catch(err => console.error('▲', err );  //will throw error
  
console.log('♦ Synchronous');


//Example 4

const tick = Date.now();
const log = (v) => console.log(`${v} \n Elapsed: ${Date.now() - tick

const codeBlocker = ( ) => {

  let i = 0;
  while(i < 10000000) {i++}
  
  return 'Ѻ҈ billion loops done';
  
  //Example 5
  
  log('♦ Synchronous 1');
  
  log('dodeBlocker());
  
  log('♦ Synchronous 2');
  
  //Example 6
  
  const codeBlocker = () => {
  
  //let i = 0;
  //while(i < 10000000) {i++}
  
  //return 'Ѻ҈ billion loops done';
  
  return new Promise((resolve, reject) => {
    let i = 0;
    while(i < 10000000) {i++}
  
    return 'Ѻ҈ billion loops done';
  
  })
  
  //Example 7
  return Promise.resolve().then(V => {
       let i = 0;
      while(i < 10000000) {i++}
  
      return 'Ѻ҈ billion loops done';
  })
}

